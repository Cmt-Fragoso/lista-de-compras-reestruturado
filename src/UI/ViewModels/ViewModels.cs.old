using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Linq;
using ListaCompras.Core.Models;

namespace ListaCompras.UI.ViewModels
{
    public abstract class ViewModelBase : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

        protected bool SetField<T>(ref T field, T value, [CallerMemberName] string propertyName = null)
        {
            if (EqualityComparer<T>.Default.Equals(field, value)) return false;
            field = value;
            OnPropertyChanged(propertyName);
            return true;
        }
    }

    public class ListaViewModel : ViewModelBase
    {
        private int _id;
        private string _nome;
        private DateTime _dataAtualizacao;
        private bool _isConcluida;
        private decimal _valorTotal;
        private List<ItemModel> _itens;

        public int Id
        {
            get => _id;
            set => SetField(ref _id, value);
        }

        public string Nome
        {
            get => _nome;
            set => SetField(ref _nome, value);
        }

        public DateTime DataAtualizacao
        {
            get => _dataAtualizacao;
            set => SetField(ref _dataAtualizacao, value);
        }

        public bool IsConcluida
        {
            get => _isConcluida;
            set => SetField(ref _isConcluida, value);
        }

        public decimal ValorTotal
        {
            get => _valorTotal;
            set => SetField(ref _valorTotal, value);
        }

        public List<ItemModel> Itens
        {
            get => _itens;
            set => SetField(ref _itens, value);
        }

        public int QuantidadeItens => Itens?.Count ?? 0;
    }

    // [As outras classes ViewModels mantidas como estavam]
    public class ItemViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class PrecoViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class ConfigViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class MainWindowViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class ListasViewViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class PrecosViewViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class BackupViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class BackupInfo : ViewModelBase
    {
        // [Propriedades mantidas]
    }

    public class ExportViewModel : ViewModelBase
    {
        // [Propriedades mantidas]
    }
}